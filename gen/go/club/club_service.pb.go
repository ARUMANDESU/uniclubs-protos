// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: club/club_service.proto

package uniclubs_club_service_v1_clubv1

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HandleClubAction int32

const (
	HandleClubAction_REJECT  HandleClubAction = 0
	HandleClubAction_APPROVE HandleClubAction = 1
)

// Enum value maps for HandleClubAction.
var (
	HandleClubAction_name = map[int32]string{
		0: "REJECT",
		1: "APPROVE",
	}
	HandleClubAction_value = map[string]int32{
		"REJECT":  0,
		"APPROVE": 1,
	}
)

func (x HandleClubAction) Enum() *HandleClubAction {
	p := new(HandleClubAction)
	*p = x
	return p
}

func (x HandleClubAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HandleClubAction) Descriptor() protoreflect.EnumDescriptor {
	return file_club_club_service_proto_enumTypes[0].Descriptor()
}

func (HandleClubAction) Type() protoreflect.EnumType {
	return &file_club_club_service_proto_enumTypes[0]
}

func (x HandleClubAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HandleClubAction.Descriptor instead.
func (HandleClubAction) EnumDescriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{0}
}

type CreateClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ClubType    string `protobuf:"bytes,3,opt,name=club_type,json=clubType,proto3" json:"club_type,omitempty"`
	OwnerId     int64  `protobuf:"varint,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *CreateClubRequest) Reset() {
	*x = CreateClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClubRequest) ProtoMessage() {}

func (x *CreateClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClubRequest.ProtoReflect.Descriptor instead.
func (*CreateClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateClubRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateClubRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateClubRequest) GetClubType() string {
	if x != nil {
		return x.ClubType
	}
	return ""
}

func (x *CreateClubRequest) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

type HandleClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64            `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	Action HandleClubAction `protobuf:"varint,2,opt,name=action,proto3,enum=club.HandleClubAction" json:"action,omitempty"`
}

func (x *HandleClubRequest) Reset() {
	*x = HandleClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleClubRequest) ProtoMessage() {}

func (x *HandleClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleClubRequest.ProtoReflect.Descriptor instead.
func (*HandleClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{1}
}

func (x *HandleClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *HandleClubRequest) GetAction() HandleClubAction {
	if x != nil {
		return x.Action
	}
	return HandleClubAction_REJECT
}

type DeleteClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
}

func (x *DeleteClubRequest) Reset() {
	*x = DeleteClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteClubRequest) ProtoMessage() {}

func (x *DeleteClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteClubRequest.ProtoReflect.Descriptor instead.
func (*DeleteClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

type UpdateClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId      int64                 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	Name        string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ClubType    string                `protobuf:"bytes,4,opt,name=club_type,json=clubType,proto3" json:"club_type,omitempty"`
	UpdateMask  *field_mask.FieldMask `protobuf:"bytes,5,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateClubRequest) Reset() {
	*x = UpdateClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClubRequest) ProtoMessage() {}

func (x *UpdateClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClubRequest.ProtoReflect.Descriptor instead.
func (*UpdateClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *UpdateClubRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateClubRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateClubRequest) GetClubType() string {
	if x != nil {
		return x.ClubType
	}
	return ""
}

func (x *UpdateClubRequest) GetUpdateMask() *field_mask.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type GetClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
}

func (x *GetClubRequest) Reset() {
	*x = GetClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClubRequest) ProtoMessage() {}

func (x *GetClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClubRequest.ProtoReflect.Descriptor instead.
func (*GetClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

type GetClubResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Club    *ClubObject   `protobuf:"bytes,1,opt,name=club,proto3" json:"club,omitempty"`
	Members []*UserObject `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
}

func (x *GetClubResponse) Reset() {
	*x = GetClubResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClubResponse) ProtoMessage() {}

func (x *GetClubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClubResponse.ProtoReflect.Descriptor instead.
func (*GetClubResponse) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetClubResponse) GetClub() *ClubObject {
	if x != nil {
		return x.Club
	}
	return nil
}

func (x *GetClubResponse) GetMembers() []*UserObject {
	if x != nil {
		return x.Members
	}
	return nil
}

type ClubObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId                 int64                `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	Name                   string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description            string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ClubType               string               `protobuf:"bytes,4,opt,name=club_type,json=clubType,proto3" json:"club_type,omitempty"`
	NumberOfMembers        int32                `protobuf:"varint,5,opt,name=number_of_members,json=numberOfMembers,proto3" json:"number_of_members,omitempty"`
	NumberOfCompleteEvents int32                `protobuf:"varint,6,opt,name=number_of_complete_events,json=numberOfCompleteEvents,proto3" json:"number_of_complete_events,omitempty"`
	LogoUrl                string               `protobuf:"bytes,7,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	BannerUrl              string               `protobuf:"bytes,8,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url,omitempty"`
	CreatedAt              *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ClubObject) Reset() {
	*x = ClubObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubObject) ProtoMessage() {}

func (x *ClubObject) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubObject.ProtoReflect.Descriptor instead.
func (*ClubObject) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{6}
}

func (x *ClubObject) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *ClubObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClubObject) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClubObject) GetClubType() string {
	if x != nil {
		return x.ClubType
	}
	return ""
}

func (x *ClubObject) GetNumberOfMembers() int32 {
	if x != nil {
		return x.NumberOfMembers
	}
	return 0
}

func (x *ClubObject) GetNumberOfCompleteEvents() int32 {
	if x != nil {
		return x.NumberOfCompleteEvents
	}
	return 0
}

func (x *ClubObject) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *ClubObject) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *ClubObject) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type UserObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email     string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FirstName string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Barcode   string `protobuf:"bytes,5,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Role      string `protobuf:"bytes,6,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *UserObject) Reset() {
	*x = UserObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserObject) ProtoMessage() {}

func (x *UserObject) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserObject.ProtoReflect.Descriptor instead.
func (*UserObject) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{7}
}

func (x *UserObject) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserObject) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserObject) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserObject) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserObject) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *UserObject) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

var File_club_club_service_proto protoreflect.FileDescriptor

var file_club_club_service_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6c, 0x75, 0x62, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6c, 0x75, 0x62, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x81, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x11, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6c, 0x75,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43,
	0x6c, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x22,
	0xbc, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x62, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x29,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x04,
	0x63, 0x6c, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x04, 0x63, 0x6c,
	0x75, 0x62, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0xd4,
	0x02, 0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x62, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x6f, 0x66, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x4f, 0x66, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x2a, 0x2b, 0x0a,
	0x10, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x10, 0x01, 0x32, 0xc7, 0x02, 0x0a, 0x04, 0x43,
	0x6c, 0x75, 0x62, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75,
	0x62, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x4a, 0x0a, 0x17, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6c, 0x75, 0x62,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3d,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x17, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3d, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x17, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x14, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x21, 0x5a, 0x1f, 0x75, 0x6e, 0x69, 0x63, 0x6c, 0x75, 0x62, 0x73,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_club_club_service_proto_rawDescOnce sync.Once
	file_club_club_service_proto_rawDescData = file_club_club_service_proto_rawDesc
)

func file_club_club_service_proto_rawDescGZIP() []byte {
	file_club_club_service_proto_rawDescOnce.Do(func() {
		file_club_club_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_club_club_service_proto_rawDescData)
	})
	return file_club_club_service_proto_rawDescData
}

var file_club_club_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_club_club_service_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_club_club_service_proto_goTypes = []interface{}{
	(HandleClubAction)(0),        // 0: club.HandleClubAction
	(*CreateClubRequest)(nil),    // 1: club.CreateClubRequest
	(*HandleClubRequest)(nil),    // 2: club.HandleClubRequest
	(*DeleteClubRequest)(nil),    // 3: club.DeleteClubRequest
	(*UpdateClubRequest)(nil),    // 4: club.UpdateClubRequest
	(*GetClubRequest)(nil),       // 5: club.GetClubRequest
	(*GetClubResponse)(nil),      // 6: club.GetClubResponse
	(*ClubObject)(nil),           // 7: club.ClubObject
	(*UserObject)(nil),           // 8: club.UserObject
	(*field_mask.FieldMask)(nil), // 9: google.protobuf.FieldMask
	(*timestamp.Timestamp)(nil),  // 10: google.protobuf.Timestamp
	(*empty.Empty)(nil),          // 11: google.protobuf.Empty
}
var file_club_club_service_proto_depIdxs = []int32{
	0,  // 0: club.HandleClubRequest.action:type_name -> club.HandleClubAction
	9,  // 1: club.UpdateClubRequest.update_mask:type_name -> google.protobuf.FieldMask
	7,  // 2: club.GetClubResponse.club:type_name -> club.ClubObject
	8,  // 3: club.GetClubResponse.members:type_name -> club.UserObject
	10, // 4: club.ClubObject.created_at:type_name -> google.protobuf.Timestamp
	1,  // 5: club.Club.CreateClub:input_type -> club.CreateClubRequest
	2,  // 6: club.Club.HandleClubCreateRequest:input_type -> club.HandleClubRequest
	3,  // 7: club.Club.DeleteClub:input_type -> club.DeleteClubRequest
	4,  // 8: club.Club.UpdateClub:input_type -> club.UpdateClubRequest
	5,  // 9: club.Club.GetClub:input_type -> club.GetClubRequest
	11, // 10: club.Club.CreateClub:output_type -> google.protobuf.Empty
	11, // 11: club.Club.HandleClubCreateRequest:output_type -> google.protobuf.Empty
	11, // 12: club.Club.DeleteClub:output_type -> google.protobuf.Empty
	11, // 13: club.Club.UpdateClub:output_type -> google.protobuf.Empty
	6,  // 14: club.Club.GetClub:output_type -> club.GetClubResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_club_club_service_proto_init() }
func file_club_club_service_proto_init() {
	if File_club_club_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_club_club_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClubResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_club_club_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_club_club_service_proto_goTypes,
		DependencyIndexes: file_club_club_service_proto_depIdxs,
		EnumInfos:         file_club_club_service_proto_enumTypes,
		MessageInfos:      file_club_club_service_proto_msgTypes,
	}.Build()
	File_club_club_service_proto = out.File
	file_club_club_service_proto_rawDesc = nil
	file_club_club_service_proto_goTypes = nil
	file_club_club_service_proto_depIdxs = nil
}
