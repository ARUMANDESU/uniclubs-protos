// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: club/club_service.proto

package uniclubs_club_service_v1_clubv1

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HandleClubAction int32

const (
	HandleClubAction_REJECT  HandleClubAction = 0
	HandleClubAction_APPROVE HandleClubAction = 1
)

// Enum value maps for HandleClubAction.
var (
	HandleClubAction_name = map[int32]string{
		0: "REJECT",
		1: "APPROVE",
	}
	HandleClubAction_value = map[string]int32{
		"REJECT":  0,
		"APPROVE": 1,
	}
)

func (x HandleClubAction) Enum() *HandleClubAction {
	p := new(HandleClubAction)
	*p = x
	return p
}

func (x HandleClubAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HandleClubAction) Descriptor() protoreflect.EnumDescriptor {
	return file_club_club_service_proto_enumTypes[0].Descriptor()
}

func (HandleClubAction) Type() protoreflect.EnumType {
	return &file_club_club_service_proto_enumTypes[0]
}

func (x HandleClubAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HandleClubAction.Descriptor instead.
func (HandleClubAction) EnumDescriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{0}
}

type JoinStatus int32

const (
	JoinStatus_NOT_MEMBER JoinStatus = 0
	JoinStatus_PENDING    JoinStatus = 1
	JoinStatus_MEMBER     JoinStatus = 2
	JoinStatus_BANNED     JoinStatus = 3
)

// Enum value maps for JoinStatus.
var (
	JoinStatus_name = map[int32]string{
		0: "NOT_MEMBER",
		1: "PENDING",
		2: "MEMBER",
		3: "BANNED",
	}
	JoinStatus_value = map[string]int32{
		"NOT_MEMBER": 0,
		"PENDING":    1,
		"MEMBER":     2,
		"BANNED":     3,
	}
)

func (x JoinStatus) Enum() *JoinStatus {
	p := new(JoinStatus)
	*p = x
	return p
}

func (x JoinStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_club_club_service_proto_enumTypes[1].Descriptor()
}

func (JoinStatus) Type() protoreflect.EnumType {
	return &file_club_club_service_proto_enumTypes[1]
}

func (x JoinStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinStatus.Descriptor instead.
func (JoinStatus) EnumDescriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{1}
}

type CreateClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	ClubType    string `protobuf:"bytes,3,opt,name=club_type,json=clubType,proto3" json:"club_type,omitempty"`
	OwnerId     int64  `protobuf:"varint,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *CreateClubRequest) Reset() {
	*x = CreateClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClubRequest) ProtoMessage() {}

func (x *CreateClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClubRequest.ProtoReflect.Descriptor instead.
func (*CreateClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateClubRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateClubRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateClubRequest) GetClubType() string {
	if x != nil {
		return x.ClubType
	}
	return ""
}

func (x *CreateClubRequest) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

type HandleNewClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64            `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	Action HandleClubAction `protobuf:"varint,2,opt,name=action,proto3,enum=club.HandleClubAction" json:"action,omitempty"`
}

func (x *HandleNewClubRequest) Reset() {
	*x = HandleNewClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleNewClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleNewClubRequest) ProtoMessage() {}

func (x *HandleNewClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleNewClubRequest.ProtoReflect.Descriptor instead.
func (*HandleNewClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{1}
}

func (x *HandleNewClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *HandleNewClubRequest) GetAction() HandleClubAction {
	if x != nil {
		return x.Action
	}
	return HandleClubAction_REJECT
}

type DeactivateClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *DeactivateClubRequest) Reset() {
	*x = DeactivateClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeactivateClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeactivateClubRequest) ProtoMessage() {}

func (x *DeactivateClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeactivateClubRequest.ProtoReflect.Descriptor instead.
func (*DeactivateClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{2}
}

func (x *DeactivateClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *DeactivateClubRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId      int64                 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId      int64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name        string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ClubType    string                `protobuf:"bytes,5,opt,name=club_type,json=clubType,proto3" json:"club_type,omitempty"`
	UpdateMask  *field_mask.FieldMask `protobuf:"bytes,6,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateClubRequest) Reset() {
	*x = UpdateClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateClubRequest) ProtoMessage() {}

func (x *UpdateClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateClubRequest.ProtoReflect.Descriptor instead.
func (*UpdateClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *UpdateClubRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateClubRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateClubRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateClubRequest) GetClubType() string {
	if x != nil {
		return x.ClubType
	}
	return ""
}

func (x *UpdateClubRequest) GetUpdateMask() *field_mask.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type GetClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
}

func (x *GetClubRequest) Reset() {
	*x = GetClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClubRequest) ProtoMessage() {}

func (x *GetClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClubRequest.ProtoReflect.Descriptor instead.
func (*GetClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

type ClubObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId          int64                `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	Name            string               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description     string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ClubType        string               `protobuf:"bytes,4,opt,name=club_type,json=clubType,proto3" json:"club_type,omitempty"`
	LogoUrl         string               `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	BannerUrl       string               `protobuf:"bytes,6,opt,name=banner_url,json=bannerUrl,proto3" json:"banner_url,omitempty"`
	NumberOfMembers int64                `protobuf:"varint,7,opt,name=number_of_members,json=numberOfMembers,proto3" json:"number_of_members,omitempty"`
	CreatedAt       *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Roles           []*Role              `protobuf:"bytes,9,rep,name=roles,proto3" json:"roles,omitempty"`
	OwnerId         int64                `protobuf:"varint,10,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *ClubObject) Reset() {
	*x = ClubObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClubObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClubObject) ProtoMessage() {}

func (x *ClubObject) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClubObject.ProtoReflect.Descriptor instead.
func (*ClubObject) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{5}
}

func (x *ClubObject) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *ClubObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClubObject) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClubObject) GetClubType() string {
	if x != nil {
		return x.ClubType
	}
	return ""
}

func (x *ClubObject) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *ClubObject) GetBannerUrl() string {
	if x != nil {
		return x.BannerUrl
	}
	return ""
}

func (x *ClubObject) GetNumberOfMembers() int64 {
	if x != nil {
		return x.NumberOfMembers
	}
	return 0
}

func (x *ClubObject) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ClubObject) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ClubObject) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Permissions uint64 `protobuf:"varint,3,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Position    int32  `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	Color       int32  `protobuf:"varint,5,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{6}
}

func (x *Role) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetPermissions() uint64 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

func (x *Role) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *Role) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

type UserObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Email     string  `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FirstName string  `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName  string  `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Barcode   string  `protobuf:"bytes,5,opt,name=barcode,proto3" json:"barcode,omitempty"`
	AvatarUrl string  `protobuf:"bytes,6,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	Roles     []int64 `protobuf:"varint,7,rep,packed,name=roles,proto3" json:"roles,omitempty"`
}

func (x *UserObject) Reset() {
	*x = UserObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserObject) ProtoMessage() {}

func (x *UserObject) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserObject.ProtoReflect.Descriptor instead.
func (*UserObject) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{7}
}

func (x *UserObject) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserObject) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserObject) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *UserObject) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *UserObject) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *UserObject) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UserObject) GetRoles() []int64 {
	if x != nil {
		return x.Roles
	}
	return nil
}

type ListClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query      string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	ClubType   []string `protobuf:"bytes,2,rep,name=club_type,json=clubType,proto3" json:"club_type,omitempty"`
	PageNumber int32    `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   int32    `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListClubRequest) Reset() {
	*x = ListClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClubRequest) ProtoMessage() {}

func (x *ListClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClubRequest.ProtoReflect.Descriptor instead.
func (*ListClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{8}
}

func (x *ListClubRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListClubRequest) GetClubType() []string {
	if x != nil {
		return x.ClubType
	}
	return nil
}

func (x *ListClubRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListClubRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListClubResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clubs    []*ClubObject       `protobuf:"bytes,1,rep,name=clubs,proto3" json:"clubs,omitempty"`
	Metadata *PaginationMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ListClubResponse) Reset() {
	*x = ListClubResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClubResponse) ProtoMessage() {}

func (x *ListClubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClubResponse.ProtoReflect.Descriptor instead.
func (*ListClubResponse) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{9}
}

func (x *ListClubResponse) GetClubs() []*ClubObject {
	if x != nil {
		return x.Clubs
	}
	return nil
}

func (x *ListClubResponse) GetMetadata() *PaginationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ListNotApprovedClubsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query      string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	ClubType   []string `protobuf:"bytes,2,rep,name=club_type,json=clubType,proto3" json:"club_type,omitempty"`
	PageNumber int32    `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   int32    `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListNotApprovedClubsRequest) Reset() {
	*x = ListNotApprovedClubsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotApprovedClubsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotApprovedClubsRequest) ProtoMessage() {}

func (x *ListNotApprovedClubsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotApprovedClubsRequest.ProtoReflect.Descriptor instead.
func (*ListNotApprovedClubsRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListNotApprovedClubsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListNotApprovedClubsRequest) GetClubType() []string {
	if x != nil {
		return x.ClubType
	}
	return nil
}

func (x *ListNotApprovedClubsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListNotApprovedClubsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListNotApprovedClubsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*NotActivatedClubsList `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Metadata *PaginationMetadata      `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ListNotApprovedClubsResponse) Reset() {
	*x = ListNotApprovedClubsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotApprovedClubsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotApprovedClubsResponse) ProtoMessage() {}

func (x *ListNotApprovedClubsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotApprovedClubsResponse.ProtoReflect.Descriptor instead.
func (*ListNotApprovedClubsResponse) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListNotApprovedClubsResponse) GetList() []*NotActivatedClubsList {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ListNotApprovedClubsResponse) GetMetadata() *PaginationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type NotActivatedClubsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clubs *ClubObject `protobuf:"bytes,1,opt,name=clubs,proto3" json:"clubs,omitempty"`
	Owner *UserObject `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *NotActivatedClubsList) Reset() {
	*x = NotActivatedClubsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotActivatedClubsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotActivatedClubsList) ProtoMessage() {}

func (x *NotActivatedClubsList) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotActivatedClubsList.ProtoReflect.Descriptor instead.
func (*NotActivatedClubsList) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{12}
}

func (x *NotActivatedClubsList) GetClubs() *ClubObject {
	if x != nil {
		return x.Clubs
	}
	return nil
}

func (x *NotActivatedClubsList) GetOwner() *UserObject {
	if x != nil {
		return x.Owner
	}
	return nil
}

type PaginationMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage  int32 `protobuf:"varint,1,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	PageSize     int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	FirstPage    int32 `protobuf:"varint,3,opt,name=first_page,json=firstPage,proto3" json:"first_page,omitempty"`
	LastPage     int32 `protobuf:"varint,4,opt,name=last_page,json=lastPage,proto3" json:"last_page,omitempty"`
	TotalRecords int32 `protobuf:"varint,5,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
}

func (x *PaginationMetadata) Reset() {
	*x = PaginationMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationMetadata) ProtoMessage() {}

func (x *PaginationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationMetadata.ProtoReflect.Descriptor instead.
func (*PaginationMetadata) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{13}
}

func (x *PaginationMetadata) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *PaginationMetadata) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PaginationMetadata) GetFirstPage() int32 {
	if x != nil {
		return x.FirstPage
	}
	return 0
}

func (x *PaginationMetadata) GetLastPage() int32 {
	if x != nil {
		return x.LastPage
	}
	return 0
}

func (x *PaginationMetadata) GetTotalRecords() int32 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type RequestToJoinClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClubId int64 `protobuf:"varint,2,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
}

func (x *RequestToJoinClubRequest) Reset() {
	*x = RequestToJoinClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestToJoinClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestToJoinClubRequest) ProtoMessage() {}

func (x *RequestToJoinClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestToJoinClubRequest.ProtoReflect.Descriptor instead.
func (*RequestToJoinClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{14}
}

func (x *RequestToJoinClubRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RequestToJoinClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

type HandleJoinClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId   int64            `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId   int64            `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	MemberId int64            `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	Action   HandleClubAction `protobuf:"varint,4,opt,name=action,proto3,enum=club.HandleClubAction" json:"action,omitempty"`
}

func (x *HandleJoinClubRequest) Reset() {
	*x = HandleJoinClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HandleJoinClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HandleJoinClubRequest) ProtoMessage() {}

func (x *HandleJoinClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HandleJoinClubRequest.ProtoReflect.Descriptor instead.
func (*HandleJoinClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{15}
}

func (x *HandleJoinClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *HandleJoinClubRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *HandleJoinClubRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *HandleJoinClubRequest) GetAction() HandleClubAction {
	if x != nil {
		return x.Action
	}
	return HandleClubAction_REJECT
}

type GetUserClubsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserClubsRequest) Reset() {
	*x = GetUserClubsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserClubsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserClubsRequest) ProtoMessage() {}

func (x *GetUserClubsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserClubsRequest.ProtoReflect.Descriptor instead.
func (*GetUserClubsRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserClubsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserClubsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clubs []*ClubObject `protobuf:"bytes,1,rep,name=clubs,proto3" json:"clubs,omitempty"`
}

func (x *GetUserClubsResponse) Reset() {
	*x = GetUserClubsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserClubsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserClubsResponse) ProtoMessage() {}

func (x *GetUserClubsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserClubsResponse.ProtoReflect.Descriptor instead.
func (*GetUserClubsResponse) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetUserClubsResponse) GetClubs() []*ClubObject {
	if x != nil {
		return x.Clubs
	}
	return nil
}

type ListClubMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId     int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	PageNumber int32 `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListClubMembersRequest) Reset() {
	*x = ListClubMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClubMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClubMembersRequest) ProtoMessage() {}

func (x *ListClubMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClubMembersRequest.ProtoReflect.Descriptor instead.
func (*ListClubMembersRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListClubMembersRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *ListClubMembersRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListClubMembersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListClubMembersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users    []*UserObject       `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Metadata *PaginationMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ListClubMembersResponse) Reset() {
	*x = ListClubMembersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClubMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClubMembersResponse) ProtoMessage() {}

func (x *ListClubMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClubMembersResponse.ProtoReflect.Descriptor instead.
func (*ListClubMembersResponse) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{19}
}

func (x *ListClubMembersResponse) GetUsers() []*UserObject {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListClubMembersResponse) GetMetadata() *PaginationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ListMembershipRequestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId     int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId     int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PageNumber int32 `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListMembershipRequestsRequest) Reset() {
	*x = ListMembershipRequestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMembershipRequestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMembershipRequestsRequest) ProtoMessage() {}

func (x *ListMembershipRequestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMembershipRequestsRequest.ProtoReflect.Descriptor instead.
func (*ListMembershipRequestsRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{20}
}

func (x *ListMembershipRequestsRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *ListMembershipRequestsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListMembershipRequestsRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListMembershipRequestsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListMembershipRequestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users    []*UserObject       `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Metadata *PaginationMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ListMembershipRequestsResponse) Reset() {
	*x = ListMembershipRequestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMembershipRequestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMembershipRequestsResponse) ProtoMessage() {}

func (x *ListMembershipRequestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMembershipRequestsResponse.ProtoReflect.Descriptor instead.
func (*ListMembershipRequestsResponse) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{21}
}

func (x *ListMembershipRequestsResponse) GetUsers() []*UserObject {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListMembershipRequestsResponse) GetMetadata() *PaginationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type LeaveClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClubId int64 `protobuf:"varint,2,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
}

func (x *LeaveClubRequest) Reset() {
	*x = LeaveClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveClubRequest) ProtoMessage() {}

func (x *LeaveClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveClubRequest.ProtoReflect.Descriptor instead.
func (*LeaveClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{22}
}

func (x *LeaveClubRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LeaveClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

type UpdateLogoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logo   []byte `protobuf:"bytes,1,opt,name=logo,proto3" json:"logo,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClubId int64  `protobuf:"varint,3,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
}

func (x *UpdateLogoRequest) Reset() {
	*x = UpdateLogoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLogoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLogoRequest) ProtoMessage() {}

func (x *UpdateLogoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLogoRequest.ProtoReflect.Descriptor instead.
func (*UpdateLogoRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateLogoRequest) GetLogo() []byte {
	if x != nil {
		return x.Logo
	}
	return nil
}

func (x *UpdateLogoRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateLogoRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

type UpdateBannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Banner []byte `protobuf:"bytes,1,opt,name=banner,proto3" json:"banner,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ClubId int64  `protobuf:"varint,3,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
}

func (x *UpdateBannerRequest) Reset() {
	*x = UpdateBannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBannerRequest) ProtoMessage() {}

func (x *UpdateBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBannerRequest.ProtoReflect.Descriptor instead.
func (*UpdateBannerRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{24}
}

func (x *UpdateBannerRequest) GetBanner() []byte {
	if x != nil {
		return x.Banner
	}
	return nil
}

func (x *UpdateBannerRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateBannerRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

type GetUserRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserRolesRequest) Reset() {
	*x = GetUserRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRolesRequest) ProtoMessage() {}

func (x *GetUserRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRolesRequest.ProtoReflect.Descriptor instead.
func (*GetUserRolesRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{25}
}

func (x *GetUserRolesRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *GetUserRolesRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles   []*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
	IsOwner bool    `protobuf:"varint,2,opt,name=is_owner,json=isOwner,proto3" json:"is_owner,omitempty"`
}

func (x *GetUserRolesResponse) Reset() {
	*x = GetUserRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRolesResponse) ProtoMessage() {}

func (x *GetUserRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRolesResponse.ProtoReflect.Descriptor instead.
func (*GetUserRolesResponse) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{26}
}

func (x *GetUserRolesResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *GetUserRolesResponse) GetIsOwner() bool {
	if x != nil {
		return x.IsOwner
	}
	return false
}

type CreateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64  `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Color  int32  `protobuf:"varint,4,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *CreateRoleRequest) Reset() {
	*x = CreateRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoleRequest) ProtoMessage() {}

func (x *CreateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoleRequest.ProtoReflect.Descriptor instead.
func (*CreateRoleRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{27}
}

func (x *CreateRoleRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *CreateRoleRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoleRequest) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

type UpdateRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId      int64                 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId      int64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId      int64                 `protobuf:"varint,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	Name        string                `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Permissions uint64                `protobuf:"varint,5,opt,name=permissions,proto3" json:"permissions,omitempty"`
	Color       int32                 `protobuf:"varint,6,opt,name=color,proto3" json:"color,omitempty"`
	UpdateMask  *field_mask.FieldMask `protobuf:"bytes,7,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateRoleRequest) Reset() {
	*x = UpdateRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoleRequest) ProtoMessage() {}

func (x *UpdateRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoleRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateRoleRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *UpdateRoleRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateRoleRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *UpdateRoleRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRoleRequest) GetPermissions() uint64 {
	if x != nil {
		return x.Permissions
	}
	return 0
}

func (x *UpdateRoleRequest) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *UpdateRoleRequest) GetUpdateMask() *field_mask.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type DeleteRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RoleId int64 `protobuf:"varint,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *DeleteRoleRequest) Reset() {
	*x = DeleteRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoleRequest) ProtoMessage() {}

func (x *DeleteRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoleRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteRoleRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *DeleteRoleRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DeleteRoleRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type AddRoleMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId  int64   `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	RoleId  int64   `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	UserId  int64   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UsersId []int64 `protobuf:"varint,4,rep,packed,name=users_id,json=usersId,proto3" json:"users_id,omitempty"`
}

func (x *AddRoleMembersRequest) Reset() {
	*x = AddRoleMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddRoleMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoleMembersRequest) ProtoMessage() {}

func (x *AddRoleMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoleMembersRequest.ProtoReflect.Descriptor instead.
func (*AddRoleMembersRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{30}
}

func (x *AddRoleMembersRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *AddRoleMembersRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *AddRoleMembersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddRoleMembersRequest) GetUsersId() []int64 {
	if x != nil {
		return x.UsersId
	}
	return nil
}

type RemoveRoleMembersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId  int64   `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	RoleId  int64   `protobuf:"varint,2,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	UserId  int64   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UsersId []int64 `protobuf:"varint,4,rep,packed,name=users_id,json=usersId,proto3" json:"users_id,omitempty"`
}

func (x *RemoveRoleMembersRequest) Reset() {
	*x = RemoveRoleMembersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRoleMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoleMembersRequest) ProtoMessage() {}

func (x *RemoveRoleMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoleMembersRequest.ProtoReflect.Descriptor instead.
func (*RemoveRoleMembersRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{31}
}

func (x *RemoveRoleMembersRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *RemoveRoleMembersRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RemoveRoleMembersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RemoveRoleMembersRequest) GetUsersId() []int64 {
	if x != nil {
		return x.UsersId
	}
	return nil
}

type ChangeRolesPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64                       `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId int64                       `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Roles  []*ChangeRolesPositionItems `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ChangeRolesPositionRequest) Reset() {
	*x = ChangeRolesPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRolesPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRolesPositionRequest) ProtoMessage() {}

func (x *ChangeRolesPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRolesPositionRequest.ProtoReflect.Descriptor instead.
func (*ChangeRolesPositionRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{32}
}

func (x *ChangeRolesPositionRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *ChangeRolesPositionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ChangeRolesPositionRequest) GetRoles() []*ChangeRolesPositionItems {
	if x != nil {
		return x.Roles
	}
	return nil
}

type ChangeRolesPositionItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Position int32 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *ChangeRolesPositionItems) Reset() {
	*x = ChangeRolesPositionItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRolesPositionItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRolesPositionItems) ProtoMessage() {}

func (x *ChangeRolesPositionItems) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRolesPositionItems.ProtoReflect.Descriptor instead.
func (*ChangeRolesPositionItems) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{33}
}

func (x *ChangeRolesPositionItems) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChangeRolesPositionItems) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type ChangeRolesPositionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*Role `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *ChangeRolesPositionResponse) Reset() {
	*x = ChangeRolesPositionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeRolesPositionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRolesPositionResponse) ProtoMessage() {}

func (x *ChangeRolesPositionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRolesPositionResponse.ProtoReflect.Descriptor instead.
func (*ChangeRolesPositionResponse) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{34}
}

func (x *ChangeRolesPositionResponse) GetRoles() []*Role {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GetClubMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetClubMemberRequest) Reset() {
	*x = GetClubMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClubMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClubMemberRequest) ProtoMessage() {}

func (x *GetClubMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClubMemberRequest.ProtoReflect.Descriptor instead.
func (*GetClubMemberRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{35}
}

func (x *GetClubMemberRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *GetClubMemberRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetJoinStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetJoinStatusRequest) Reset() {
	*x = GetJoinStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinStatusRequest) ProtoMessage() {}

func (x *GetJoinStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinStatusRequest.ProtoReflect.Descriptor instead.
func (*GetJoinStatusRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{36}
}

func (x *GetJoinStatusRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *GetJoinStatusRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetJoinStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status JoinStatus `protobuf:"varint,1,opt,name=status,proto3,enum=club.JoinStatus" json:"status,omitempty"`
}

func (x *GetJoinStatusResponse) Reset() {
	*x = GetJoinStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoinStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoinStatusResponse) ProtoMessage() {}

func (x *GetJoinStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoinStatusResponse.ProtoReflect.Descriptor instead.
func (*GetJoinStatusResponse) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{37}
}

func (x *GetJoinStatusResponse) GetStatus() JoinStatus {
	if x != nil {
		return x.Status
	}
	return JoinStatus_NOT_MEMBER
}

type KickMemberFromClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId   int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId   int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *KickMemberFromClubRequest) Reset() {
	*x = KickMemberFromClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KickMemberFromClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KickMemberFromClubRequest) ProtoMessage() {}

func (x *KickMemberFromClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KickMemberFromClubRequest.ProtoReflect.Descriptor instead.
func (*KickMemberFromClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{38}
}

func (x *KickMemberFromClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *KickMemberFromClubRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *KickMemberFromClubRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type BanMemberFromClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId   int64  `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId   int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId int64  `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Reason   string `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *BanMemberFromClubRequest) Reset() {
	*x = BanMemberFromClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanMemberFromClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanMemberFromClubRequest) ProtoMessage() {}

func (x *BanMemberFromClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanMemberFromClubRequest.ProtoReflect.Descriptor instead.
func (*BanMemberFromClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{39}
}

func (x *BanMemberFromClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *BanMemberFromClubRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BanMemberFromClubRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *BanMemberFromClubRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UnbanUserFromClubRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId   int64 `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId   int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId int64 `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
}

func (x *UnbanUserFromClubRequest) Reset() {
	*x = UnbanUserFromClubRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbanUserFromClubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanUserFromClubRequest) ProtoMessage() {}

func (x *UnbanUserFromClubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanUserFromClubRequest.ProtoReflect.Descriptor instead.
func (*UnbanUserFromClubRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{40}
}

func (x *UnbanUserFromClubRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *UnbanUserFromClubRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UnbanUserFromClubRequest) GetTargetId() int64 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

type ListBannedUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClubId     int64  `protobuf:"varint,1,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	UserId     int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Query      string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	PageNumber int32  `protobuf:"varint,4,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	PageSize   int32  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *ListBannedUsersRequest) Reset() {
	*x = ListBannedUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBannedUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBannedUsersRequest) ProtoMessage() {}

func (x *ListBannedUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBannedUsersRequest.ProtoReflect.Descriptor instead.
func (*ListBannedUsersRequest) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{41}
}

func (x *ListBannedUsersRequest) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *ListBannedUsersRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListBannedUsersRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *ListBannedUsersRequest) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *ListBannedUsersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type BanRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClubId   int64       `protobuf:"varint,2,opt,name=club_id,json=clubId,proto3" json:"club_id,omitempty"`
	User     *UserObject `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Admin    *UserObject `protobuf:"bytes,4,opt,name=admin,proto3" json:"admin,omitempty"`
	Reason   string      `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	BannedAt string      `protobuf:"bytes,6,opt,name=banned_at,json=bannedAt,proto3" json:"banned_at,omitempty"`
}

func (x *BanRecord) Reset() {
	*x = BanRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BanRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanRecord) ProtoMessage() {}

func (x *BanRecord) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanRecord.ProtoReflect.Descriptor instead.
func (*BanRecord) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{42}
}

func (x *BanRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BanRecord) GetClubId() int64 {
	if x != nil {
		return x.ClubId
	}
	return 0
}

func (x *BanRecord) GetUser() *UserObject {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *BanRecord) GetAdmin() *UserObject {
	if x != nil {
		return x.Admin
	}
	return nil
}

func (x *BanRecord) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *BanRecord) GetBannedAt() string {
	if x != nil {
		return x.BannedAt
	}
	return ""
}

type ListBannedUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bans     []*BanRecord        `protobuf:"bytes,1,rep,name=bans,proto3" json:"bans,omitempty"`
	Metadata *PaginationMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *ListBannedUsersResponse) Reset() {
	*x = ListBannedUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_club_club_service_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBannedUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBannedUsersResponse) ProtoMessage() {}

func (x *ListBannedUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_club_club_service_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBannedUsersResponse.ProtoReflect.Descriptor instead.
func (*ListBannedUsersResponse) Descriptor() ([]byte, []int) {
	return file_club_club_service_proto_rawDescGZIP(), []int{43}
}

func (x *ListBannedUsersResponse) GetBans() []*BanRecord {
	if x != nil {
		return x.Bans
	}
	return nil
}

func (x *ListBannedUsersResponse) GetMetadata() *PaginationMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_club_club_service_proto protoreflect.FileDescriptor

var file_club_club_service_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6c, 0x75, 0x62, 0x2f, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x6c, 0x75, 0x62, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x81, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x14, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x65, 0x77,
	0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63,
	0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c,
	0x75, 0x62, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x15, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0xd5, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62,
	0x49, 0x64, 0x22, 0xd6, 0x02, 0x0a, 0x0a, 0x43, 0x6c, 0x75, 0x62, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7e, 0x0a, 0x04, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xc6, 0x01, 0x0a, 0x0a,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x70, 0x0a, 0x10, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x05, 0x63, 0x6c, 0x75, 0x62, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05,
	0x63, 0x6c, 0x75, 0x62, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8e, 0x01, 0x0a, 0x1b,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x43,
	0x6c, 0x75, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x85, 0x01, 0x0a,
	0x1c, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64,
	0x43, 0x6c, 0x75, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x64, 0x43,
	0x6c, 0x75, 0x62, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x34,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x15, 0x4e, 0x6f, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x62, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x05, 0x63, 0x6c, 0x75, 0x62, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05,
	0x63, 0x6c, 0x75, 0x62, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0xb5, 0x01,
	0x0a, 0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x4c, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c,
	0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75,
	0x62, 0x49, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x15, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4a, 0x6f,
	0x69, 0x6e, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2e, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x75, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x75, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x6c, 0x75, 0x62, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x63, 0x6c, 0x75, 0x62, 0x73, 0x22, 0x6f, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x77, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x7e, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x44, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x22, 0x59,
	0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x6f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xe7, 0x01, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d,
	0x61, 0x73, 0x6b, 0x22, 0x5e, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x7d, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x49, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c,
	0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x18,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x48, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6a, 0x0a, 0x19,
	0x4b, 0x69, 0x63, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c,
	0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x18, 0x42, 0x61, 0x6e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x69, 0x0a, 0x18,
	0x55, 0x6e, 0x62, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x75,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x09, 0x42, 0x61, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x75, 0x62, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x74, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x04, 0x62, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x62, 0x61,
	0x6e, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x2b, 0x0a, 0x10, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06,
	0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x50, 0x50, 0x52,
	0x4f, 0x56, 0x45, 0x10, 0x01, 0x2a, 0x41, 0x0a, 0x0a, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x4f, 0x54, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45,
	0x52, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x42, 0x41, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x03, 0x32, 0xb9, 0x0f, 0x0a, 0x04, 0x43, 0x6c, 0x75,
	0x62, 0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x12,
	0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x43, 0x0a, 0x0d, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e, 0x65, 0x77, 0x43, 0x6c, 0x75,
	0x62, 0x12, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4e,
	0x65, 0x77, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62,
	0x12, 0x14, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c,
	0x75, 0x62, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x3a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6c, 0x75, 0x62, 0x73, 0x12, 0x15, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x62, 0x73, 0x12, 0x21, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x43, 0x6c, 0x75, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f,
	0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x45, 0x0a, 0x0e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c,
	0x75, 0x62, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0e, 0x44, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x44, 0x65, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x37,
	0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x17, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75,
	0x62, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x6c, 0x75, 0x62, 0x73, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6c, 0x75, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x6c, 0x75, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1a, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63, 0x6c,
	0x75, 0x62, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x48, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6c, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x75, 0x62, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x12, 0x23, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x09,
	0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x16, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x10, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x6c, 0x75, 0x62, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x19, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x75,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e,
	0x63, 0x6c, 0x75, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x0a, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x5a, 0x0a, 0x13,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x52, 0x6f,
	0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x2e, 0x63, 0x6c, 0x75, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b,
	0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x12, 0x4b,
	0x69, 0x63, 0x6b, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x75,
	0x62, 0x12, 0x1f, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4b, 0x69, 0x63, 0x6b, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x11, 0x42, 0x61,
	0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x75, 0x62, 0x12,
	0x1e, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x42, 0x61, 0x6e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x11, 0x55, 0x6e, 0x62, 0x61, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x75, 0x62, 0x12, 0x1e, 0x2e, 0x63,
	0x6c, 0x75, 0x62, 0x2e, 0x55, 0x6e, 0x62, 0x61, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x6d, 0x43, 0x6c, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x4e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6c, 0x75, 0x62, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x21, 0x5a, 0x1f, 0x75, 0x6e, 0x69, 0x63, 0x6c, 0x75, 0x62, 0x73,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6c, 0x75, 0x62, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_club_club_service_proto_rawDescOnce sync.Once
	file_club_club_service_proto_rawDescData = file_club_club_service_proto_rawDesc
)

func file_club_club_service_proto_rawDescGZIP() []byte {
	file_club_club_service_proto_rawDescOnce.Do(func() {
		file_club_club_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_club_club_service_proto_rawDescData)
	})
	return file_club_club_service_proto_rawDescData
}

var file_club_club_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_club_club_service_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_club_club_service_proto_goTypes = []interface{}{
	(HandleClubAction)(0),                  // 0: club.HandleClubAction
	(JoinStatus)(0),                        // 1: club.JoinStatus
	(*CreateClubRequest)(nil),              // 2: club.CreateClubRequest
	(*HandleNewClubRequest)(nil),           // 3: club.HandleNewClubRequest
	(*DeactivateClubRequest)(nil),          // 4: club.DeactivateClubRequest
	(*UpdateClubRequest)(nil),              // 5: club.UpdateClubRequest
	(*GetClubRequest)(nil),                 // 6: club.GetClubRequest
	(*ClubObject)(nil),                     // 7: club.ClubObject
	(*Role)(nil),                           // 8: club.Role
	(*UserObject)(nil),                     // 9: club.UserObject
	(*ListClubRequest)(nil),                // 10: club.ListClubRequest
	(*ListClubResponse)(nil),               // 11: club.ListClubResponse
	(*ListNotApprovedClubsRequest)(nil),    // 12: club.ListNotApprovedClubsRequest
	(*ListNotApprovedClubsResponse)(nil),   // 13: club.ListNotApprovedClubsResponse
	(*NotActivatedClubsList)(nil),          // 14: club.NotActivatedClubsList
	(*PaginationMetadata)(nil),             // 15: club.PaginationMetadata
	(*RequestToJoinClubRequest)(nil),       // 16: club.RequestToJoinClubRequest
	(*HandleJoinClubRequest)(nil),          // 17: club.HandleJoinClubRequest
	(*GetUserClubsRequest)(nil),            // 18: club.GetUserClubsRequest
	(*GetUserClubsResponse)(nil),           // 19: club.GetUserClubsResponse
	(*ListClubMembersRequest)(nil),         // 20: club.ListClubMembersRequest
	(*ListClubMembersResponse)(nil),        // 21: club.ListClubMembersResponse
	(*ListMembershipRequestsRequest)(nil),  // 22: club.ListMembershipRequestsRequest
	(*ListMembershipRequestsResponse)(nil), // 23: club.ListMembershipRequestsResponse
	(*LeaveClubRequest)(nil),               // 24: club.LeaveClubRequest
	(*UpdateLogoRequest)(nil),              // 25: club.UpdateLogoRequest
	(*UpdateBannerRequest)(nil),            // 26: club.UpdateBannerRequest
	(*GetUserRolesRequest)(nil),            // 27: club.GetUserRolesRequest
	(*GetUserRolesResponse)(nil),           // 28: club.GetUserRolesResponse
	(*CreateRoleRequest)(nil),              // 29: club.CreateRoleRequest
	(*UpdateRoleRequest)(nil),              // 30: club.UpdateRoleRequest
	(*DeleteRoleRequest)(nil),              // 31: club.DeleteRoleRequest
	(*AddRoleMembersRequest)(nil),          // 32: club.AddRoleMembersRequest
	(*RemoveRoleMembersRequest)(nil),       // 33: club.RemoveRoleMembersRequest
	(*ChangeRolesPositionRequest)(nil),     // 34: club.ChangeRolesPositionRequest
	(*ChangeRolesPositionItems)(nil),       // 35: club.ChangeRolesPositionItems
	(*ChangeRolesPositionResponse)(nil),    // 36: club.ChangeRolesPositionResponse
	(*GetClubMemberRequest)(nil),           // 37: club.GetClubMemberRequest
	(*GetJoinStatusRequest)(nil),           // 38: club.GetJoinStatusRequest
	(*GetJoinStatusResponse)(nil),          // 39: club.GetJoinStatusResponse
	(*KickMemberFromClubRequest)(nil),      // 40: club.KickMemberFromClubRequest
	(*BanMemberFromClubRequest)(nil),       // 41: club.BanMemberFromClubRequest
	(*UnbanUserFromClubRequest)(nil),       // 42: club.UnbanUserFromClubRequest
	(*ListBannedUsersRequest)(nil),         // 43: club.ListBannedUsersRequest
	(*BanRecord)(nil),                      // 44: club.BanRecord
	(*ListBannedUsersResponse)(nil),        // 45: club.ListBannedUsersResponse
	(*field_mask.FieldMask)(nil),           // 46: google.protobuf.FieldMask
	(*timestamp.Timestamp)(nil),            // 47: google.protobuf.Timestamp
	(*empty.Empty)(nil),                    // 48: google.protobuf.Empty
}
var file_club_club_service_proto_depIdxs = []int32{
	0,  // 0: club.HandleNewClubRequest.action:type_name -> club.HandleClubAction
	46, // 1: club.UpdateClubRequest.update_mask:type_name -> google.protobuf.FieldMask
	47, // 2: club.ClubObject.created_at:type_name -> google.protobuf.Timestamp
	8,  // 3: club.ClubObject.roles:type_name -> club.Role
	7,  // 4: club.ListClubResponse.clubs:type_name -> club.ClubObject
	15, // 5: club.ListClubResponse.metadata:type_name -> club.PaginationMetadata
	14, // 6: club.ListNotApprovedClubsResponse.list:type_name -> club.NotActivatedClubsList
	15, // 7: club.ListNotApprovedClubsResponse.metadata:type_name -> club.PaginationMetadata
	7,  // 8: club.NotActivatedClubsList.clubs:type_name -> club.ClubObject
	9,  // 9: club.NotActivatedClubsList.owner:type_name -> club.UserObject
	0,  // 10: club.HandleJoinClubRequest.action:type_name -> club.HandleClubAction
	7,  // 11: club.GetUserClubsResponse.clubs:type_name -> club.ClubObject
	9,  // 12: club.ListClubMembersResponse.users:type_name -> club.UserObject
	15, // 13: club.ListClubMembersResponse.metadata:type_name -> club.PaginationMetadata
	9,  // 14: club.ListMembershipRequestsResponse.users:type_name -> club.UserObject
	15, // 15: club.ListMembershipRequestsResponse.metadata:type_name -> club.PaginationMetadata
	8,  // 16: club.GetUserRolesResponse.roles:type_name -> club.Role
	46, // 17: club.UpdateRoleRequest.update_mask:type_name -> google.protobuf.FieldMask
	35, // 18: club.ChangeRolesPositionRequest.roles:type_name -> club.ChangeRolesPositionItems
	8,  // 19: club.ChangeRolesPositionResponse.roles:type_name -> club.Role
	1,  // 20: club.GetJoinStatusResponse.status:type_name -> club.JoinStatus
	9,  // 21: club.BanRecord.user:type_name -> club.UserObject
	9,  // 22: club.BanRecord.admin:type_name -> club.UserObject
	44, // 23: club.ListBannedUsersResponse.bans:type_name -> club.BanRecord
	15, // 24: club.ListBannedUsersResponse.metadata:type_name -> club.PaginationMetadata
	2,  // 25: club.Club.CreateClub:input_type -> club.CreateClubRequest
	3,  // 26: club.Club.HandleNewClub:input_type -> club.HandleNewClubRequest
	6,  // 27: club.Club.GetClub:input_type -> club.GetClubRequest
	10, // 28: club.Club.ListClubs:input_type -> club.ListClubRequest
	12, // 29: club.Club.ListNotApprovedClubs:input_type -> club.ListNotApprovedClubsRequest
	16, // 30: club.Club.RequestToJoinClub:input_type -> club.RequestToJoinClubRequest
	17, // 31: club.Club.HandleJoinClub:input_type -> club.HandleJoinClubRequest
	4,  // 32: club.Club.DeactivateClub:input_type -> club.DeactivateClubRequest
	5,  // 33: club.Club.UpdateClub:input_type -> club.UpdateClubRequest
	18, // 34: club.Club.GetUserClubs:input_type -> club.GetUserClubsRequest
	37, // 35: club.Club.GetClubMember:input_type -> club.GetClubMemberRequest
	38, // 36: club.Club.GetJoinStatus:input_type -> club.GetJoinStatusRequest
	20, // 37: club.Club.ListClubMembers:input_type -> club.ListClubMembersRequest
	22, // 38: club.Club.ListMembershipRequests:input_type -> club.ListMembershipRequestsRequest
	24, // 39: club.Club.LeaveClub:input_type -> club.LeaveClubRequest
	25, // 40: club.Club.UpdateLogo:input_type -> club.UpdateLogoRequest
	26, // 41: club.Club.UpdateBanner:input_type -> club.UpdateBannerRequest
	27, // 42: club.Club.GetUserRoles:input_type -> club.GetUserRolesRequest
	29, // 43: club.Club.CreateRole:input_type -> club.CreateRoleRequest
	30, // 44: club.Club.UpdateRole:input_type -> club.UpdateRoleRequest
	34, // 45: club.Club.ChangeRolesPosition:input_type -> club.ChangeRolesPositionRequest
	31, // 46: club.Club.DeleteRole:input_type -> club.DeleteRoleRequest
	32, // 47: club.Club.AddRoleMembers:input_type -> club.AddRoleMembersRequest
	33, // 48: club.Club.RemoveRoleMembers:input_type -> club.RemoveRoleMembersRequest
	40, // 49: club.Club.KickMemberFromClub:input_type -> club.KickMemberFromClubRequest
	41, // 50: club.Club.BanMemberFromClub:input_type -> club.BanMemberFromClubRequest
	42, // 51: club.Club.UnbanUserFromClub:input_type -> club.UnbanUserFromClubRequest
	43, // 52: club.Club.ListBannedUsers:input_type -> club.ListBannedUsersRequest
	48, // 53: club.Club.CreateClub:output_type -> google.protobuf.Empty
	48, // 54: club.Club.HandleNewClub:output_type -> google.protobuf.Empty
	7,  // 55: club.Club.GetClub:output_type -> club.ClubObject
	11, // 56: club.Club.ListClubs:output_type -> club.ListClubResponse
	13, // 57: club.Club.ListNotApprovedClubs:output_type -> club.ListNotApprovedClubsResponse
	48, // 58: club.Club.RequestToJoinClub:output_type -> google.protobuf.Empty
	48, // 59: club.Club.HandleJoinClub:output_type -> google.protobuf.Empty
	48, // 60: club.Club.DeactivateClub:output_type -> google.protobuf.Empty
	7,  // 61: club.Club.UpdateClub:output_type -> club.ClubObject
	19, // 62: club.Club.GetUserClubs:output_type -> club.GetUserClubsResponse
	9,  // 63: club.Club.GetClubMember:output_type -> club.UserObject
	39, // 64: club.Club.GetJoinStatus:output_type -> club.GetJoinStatusResponse
	21, // 65: club.Club.ListClubMembers:output_type -> club.ListClubMembersResponse
	23, // 66: club.Club.ListMembershipRequests:output_type -> club.ListMembershipRequestsResponse
	48, // 67: club.Club.LeaveClub:output_type -> google.protobuf.Empty
	7,  // 68: club.Club.UpdateLogo:output_type -> club.ClubObject
	7,  // 69: club.Club.UpdateBanner:output_type -> club.ClubObject
	28, // 70: club.Club.GetUserRoles:output_type -> club.GetUserRolesResponse
	8,  // 71: club.Club.CreateRole:output_type -> club.Role
	8,  // 72: club.Club.UpdateRole:output_type -> club.Role
	36, // 73: club.Club.ChangeRolesPosition:output_type -> club.ChangeRolesPositionResponse
	48, // 74: club.Club.DeleteRole:output_type -> google.protobuf.Empty
	48, // 75: club.Club.AddRoleMembers:output_type -> google.protobuf.Empty
	48, // 76: club.Club.RemoveRoleMembers:output_type -> google.protobuf.Empty
	48, // 77: club.Club.KickMemberFromClub:output_type -> google.protobuf.Empty
	48, // 78: club.Club.BanMemberFromClub:output_type -> google.protobuf.Empty
	48, // 79: club.Club.UnbanUserFromClub:output_type -> google.protobuf.Empty
	45, // 80: club.Club.ListBannedUsers:output_type -> club.ListBannedUsersResponse
	53, // [53:81] is the sub-list for method output_type
	25, // [25:53] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_club_club_service_proto_init() }
func file_club_club_service_proto_init() {
	if File_club_club_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_club_club_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleNewClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeactivateClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClubObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClubResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotApprovedClubsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotApprovedClubsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotActivatedClubsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestToJoinClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HandleJoinClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserClubsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserClubsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClubMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClubMembersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMembershipRequestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMembershipRequestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLogoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddRoleMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRoleMembersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRolesPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRolesPositionItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeRolesPositionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClubMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoinStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KickMemberFromClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanMemberFromClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbanUserFromClubRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBannedUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BanRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_club_club_service_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBannedUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_club_club_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_club_club_service_proto_goTypes,
		DependencyIndexes: file_club_club_service_proto_depIdxs,
		EnumInfos:         file_club_club_service_proto_enumTypes,
		MessageInfos:      file_club_club_service_proto_msgTypes,
	}.Build()
	File_club_club_service_proto = out.File
	file_club_club_service_proto_rawDesc = nil
	file_club_club_service_proto_goTypes = nil
	file_club_club_service_proto_depIdxs = nil
}
